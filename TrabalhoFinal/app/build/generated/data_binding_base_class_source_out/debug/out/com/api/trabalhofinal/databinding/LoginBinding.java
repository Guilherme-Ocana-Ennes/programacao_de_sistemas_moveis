// Generated by view binder compiler. Do not edit!
package com.api.trabalhofinal.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.api.trabalhofinal.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class LoginBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView TitleAppLogin;

  @NonNull
  public final Button buttonLogin;

  @NonNull
  public final Button buttonSingin;

  @NonNull
  public final EditText editTextPassword;

  @NonNull
  public final EditText editTextUsername;

  private LoginBinding(@NonNull ConstraintLayout rootView, @NonNull TextView TitleAppLogin,
      @NonNull Button buttonLogin, @NonNull Button buttonSingin, @NonNull EditText editTextPassword,
      @NonNull EditText editTextUsername) {
    this.rootView = rootView;
    this.TitleAppLogin = TitleAppLogin;
    this.buttonLogin = buttonLogin;
    this.buttonSingin = buttonSingin;
    this.editTextPassword = editTextPassword;
    this.editTextUsername = editTextUsername;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static LoginBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static LoginBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup parent,
      boolean attachToParent) {
    View root = inflater.inflate(R.layout.login, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static LoginBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.TitleAppLogin;
      TextView TitleAppLogin = ViewBindings.findChildViewById(rootView, id);
      if (TitleAppLogin == null) {
        break missingId;
      }

      id = R.id.buttonLogin;
      Button buttonLogin = ViewBindings.findChildViewById(rootView, id);
      if (buttonLogin == null) {
        break missingId;
      }

      id = R.id.buttonSingin;
      Button buttonSingin = ViewBindings.findChildViewById(rootView, id);
      if (buttonSingin == null) {
        break missingId;
      }

      id = R.id.editTextPassword;
      EditText editTextPassword = ViewBindings.findChildViewById(rootView, id);
      if (editTextPassword == null) {
        break missingId;
      }

      id = R.id.editTextUsername;
      EditText editTextUsername = ViewBindings.findChildViewById(rootView, id);
      if (editTextUsername == null) {
        break missingId;
      }

      return new LoginBinding((ConstraintLayout) rootView, TitleAppLogin, buttonLogin, buttonSingin,
          editTextPassword, editTextUsername);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
